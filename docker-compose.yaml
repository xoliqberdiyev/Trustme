networks:
  trustme:
    driver: bridge

volumes:
  pg_date: null


services:
  nginx:
    networks:
      - trustme
    ports:
      - ${PORT-8001}:80
    volumes:
      - ./resources/layout/nginx.conf:/etc/nginx/nginx.conf
      - ./resources:/usr/share/nginx/html/resources/
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.nginx
    depends_on:
      - web
  
  web:
    networks:
      - trustme
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.web
    # restart: always
    command: sh resources/scripts/entrypoint.sh
    environment:
      - PYTHONPYCACHEPREFIX=/var/cache/pycache
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_BACKEND_URL=redis://redis:6379/0


    volumes:
      - './:/code'
    depends_on:
      - db
      - redis

  celery:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.web
    command: celery -A config worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
      - web
    networks:
      - trustme
    restart: always

  db:
    image: postgres:16
    networks:
      - trustme
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}
    volumes:
      - pg_date:/var/lib/postgresql/data
  
  redis:
    networks:
      - trustme
    restart: always
    image: redis:latest
    ports:
      - 6380:6379
    
  # bot:
  #   build: 
  #     context: /home/behruz/bots/send-verification-code
  #     dockerfile: Dockerfile
  #   volumes:
  #     - /home/behruz/bots/send-verification-code:/bot
    # restart: unless-stopped
